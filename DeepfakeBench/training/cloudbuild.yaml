steps:
# Step 1: Read the version number from the VERSION file into a temporary file called 'version_tag'.
# This makes the version number accessible to all subsequent steps in the build workspace.
- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
#  args: ['-c', 'cat VERSION > /workspace/version_tag']

# Step 2: Pull the latest image to be used as a cache source.
# This helps speed up the build process.
- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args:
  - '-c'
  - 'docker pull us-docker.pkg.dev/train-cvit2/effort-detector/effort-detector:latest || exit 0'

# Step 3: Build the new Docker image.
# It tags the image twice: once with the unique version from the VERSION file,
# and once with ':latest' to be used as a cache for the *next* build.
- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  timeout: 1800s
  args:
    - '-c'
    - |
      docker build \
        --cache-from us-docker.pkg.dev/train-cvit2/effort-detector/effort-detector:latest \
        -t us-docker.pkg.dev/train-cvit2/effort-detector/effort-detector:1.0.0 \
        -t us-docker.pkg.dev/train-cvit2/effort-detector/effort-detector:latest \
        .

# Step 4: Define which images to push to the Artifact Registry.
# We push both the uniquely tagged image and the :latest tag.
images:
- 'us-docker.pkg.dev/train-cvit2/effort-detector/effort-detector:latest'
- 'us-docker.pkg.dev/train-cvit2/effort-detector/effort-detector:1.0.0'
  # Note: The _VERSION_TAG will be substituted from the workspace file.
  # This substitution requires us to add it to the 'substitutions' section below.
#
#substitutions:
#  _VERSION_TAG: 'default-tag' # A default value is required.

options:
  machineType: 'E2_HIGHCPU_8'